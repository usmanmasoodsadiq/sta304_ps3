household_income == "$20,000 to $24,999" | household_income == '<NA>') ~ "less than $24,999",
(household_income == "$25,000 to $29,999" | household_income == "$30,000 to $34,999" |
household_income == "$35,000 to $39,999"| household_income == "$40,000 to $44,999" |
household_income == "$45,000 to $49,999") ~ "24,999 to 49,999",
(household_income == "$50,000 to $54,999" | household_income == "$55,000 to $59,999" |
household_income == "$60,000 to $64,999"| household_income == "$65,000 to $69,999" |
household_income == "$70,000 to $74,999" | household_income == "$75,000 to $79,999" |
household_income == "$80,000 to $84,999" | household_income == "$85,000 to $89,999" |
household_income == "$90,000 to $94,999" | household_income == "$95,000 to $99,999") ~ "50,000 to 99,999",
(household_income == "$100,000 to $124,999" | household_income == "$125,000 to $149,999") ~ "100,000 to 149,999",
(household_income == "$175,000 to $199,999" | household_income == "$150,000 to $174,999" |
household_income == "$200,000 to $249,999"| household_income == "$250,000 and above") ~ "150,000 or more"
)
) %>%
mutate(education =
case_when(
(education == "High school graduate" | education == "Other post high school vocational training" |
education == "3rd Grade or less" | education == "Completed some high school" | education == "Middle School - Grades 4 - 8") ~ "highschool or less",
(education == "Associate Degree" | education == "Completed some college, but no degree") ~ "associate degree",
(education == "College Degree (such as B.A., B.S.)" | education == "Completed some graduate, but no degree") ~ "bachelors degree",
(education == "Masters degree" | education == "Doctorate degree") ~ "masters or above"
)
) %>%
mutate(vote_trump =
ifelse(vote_2020=="Donald Trump", 1, 0)) %>%
mutate(gender = ifelse(gender=="Male","male","female"))
#### What else???? ####
# Maybe make some age-groups?
# Maybe check the values?
# Is vote a binary? If not, what are you going to do?
# Saving the survey/sample data as a csv file in my
# working directory
write_csv(reduced_data, "outputs/survey_data.csv")
#### Preamble ####
# Purpose: Prepare and clean the survey data downloaded from [...UPDATE ME!!!!!]
# Author: Rohan Alexander and Sam Caetano [CHANGE THIS TO YOUR NAME!!!!]
# Data: 22 October 2020
# Contact: rohan.alexander@utoronto.ca [PROBABLY CHANGE THIS ALSO!!!!]
# License: MIT
# Pre-requisites:
# - Need to have downloaded the data from X and save the folder that you're
# interested in to inputs/data
# - Don't forget to gitignore it!
#### Workspace setup ####
library(haven)
library(tidyverse)
setwd("/Users/Victor/Documents/sta304_ps3")
# Read in the raw data (You might need to change this if you use a different dataset)
raw_data <- read_dta("ns20200625/ns20200625.dta")
# Add the labels
raw_data <- labelled::to_factor(raw_data)
raw_data
unique(raw_data$household_income)
# Just keep some variables
reduced_data <-
raw_data %>%
select(
vote_2020,
gender,
race_ethnicity,
household_income,
education,
age) %>%
filter(vote_2020 != "I am not sure/don't know") %>%
filter(vote_2020 != "I would not vote") %>%
filter(vote_2020 != "Someone else") %>%
na.omit() %>%
mutate(race_ethnicity =
case_when(
race_ethnicity == "White" ~ "white",
race_ethnicity == "Black, or African American" ~ "black/african american/negro",
race_ethnicity == "Asian (Vietnamese)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Chinese)" ~ "chinese",
race_ethnicity == "Asian (Korean)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Japanese)" ~ "japanese",
race_ethnicity == "Asian (Filipino)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Other)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Asian Indian)" ~ "american indian or alaska native",
race_ethnicity == "Pacific Islander (Other)" ~ "other asian or pacific islander",
race_ethnicity == "Pacific Islander (Samoan)" ~ "other asian or pacific islander",
race_ethnicity == "Pacific Islander (Guamanian)" ~ "other asian or pacific islander",
race_ethnicity == "Some other race" ~ "other race, nec",
race_ethnicity == "Pacific Islander (Native Hawaiian)" ~ "other asian or pacific islander",
race_ethnicity == "American Indian or Alaska Native" ~ "american indian or alaska native"
)
) %>%
mutate(household_income =
case_when(
(household_income == "Less than $14,999" | household_income == "$15,000 to $19,999" |
household_income == "$20,000 to $24,999" | household_income == '<NA>') ~ "less than $24,999",
(household_income == "$25,000 to $29,999" | household_income == "$30,000 to $34,999" |
household_income == "$35,000 to $39,999"| household_income == "$40,000 to $44,999" |
household_income == "$45,000 to $49,999") ~ "24,999 to 49,999",
(household_income == "$50,000 to $54,999" | household_income == "$55,000 to $59,999" |
household_income == "$60,000 to $64,999"| household_income == "$65,000 to $69,999" |
household_income == "$70,000 to $74,999" | household_income == "$75,000 to $79,999" |
household_income == "$80,000 to $84,999" | household_income == "$85,000 to $89,999" |
household_income == "$90,000 to $94,999" | household_income == "$95,000 to $99,999") ~ "50,000 to 99,999",
(household_income == "$100,000 to $124,999" | household_income == "$125,000 to $149,999") ~ "100,000 to 149,999",
(household_income == "$175,000 to $199,999" | household_income == "$150,000 to $174,999" |
household_income == "$200,000 to $249,999"| household_income == "$250,000 and above") ~ "150,000 or more"
)
) %>%
mutate(education =
case_when(
(education == "High school graduate" | education == "Other post high school vocational training" |
education == "3rd Grade or less" | education == "Completed some high school" | education == "Middle School - Grades 4 - 8") ~ "highschool or less",
(education == "Associate Degree" | education == "Completed some college, but no degree") ~ "associate degree",
(education == "College Degree (such as B.A., B.S.)" | education == "Completed some graduate, but no degree") ~ "bachelors degree",
(education == "Masters degree" | education == "Doctorate degree") ~ "masters or above"
)
) %>%
mutate(vote_trump =
ifelse(vote_2020=="Donald Trump", 1, 0)) %>%
mutate(gender = ifelse(gender=="Male","male","female"))
#### What else???? ####
# Maybe make some age-groups?
# Maybe check the values?
# Is vote a binary? If not, what are you going to do?
# Saving the survey/sample data as a csv file in my
# working directory
write_csv(reduced_data, "outputs/survey_data.csv")
unique(reduced_data$household_income)
unique(reduced_data$education)
#### Preamble ####
# Purpose: Prepare and clean the survey data downloaded from [...UPDATE ME!!!!!]
# Author: Rohan Alexander and Sam Caetano [CHANGE THIS TO YOUR NAME!!!!]
# Data: 22 October 2020
# Contact: rohan.alexander@utoronto.ca [PROBABLY CHANGE THIS ALSO!!!!]
# License: MIT
# Pre-requisites:
# - Need to have downloaded the data from X and save the folder that you're
# interested in to inputs/data
# - Don't forget to gitignore it!
#### Workspace setup ####
library(haven)
library(tidyverse)
setwd("/Users/Victor/Documents/sta304_ps3")
# Read in the raw data (You might need to change this if you use a different dataset)
raw_data <- read_dta("ns20200625/ns20200625.dta")
# Add the labels
raw_data <- labelled::to_factor(raw_data)
raw_data
unique(raw_data$household_income)
# Just keep some variables
reduced_data <-
raw_data %>%
select(
vote_2020,
gender,
race_ethnicity,
household_income,
education,
age) %>%
filter(vote_2020 != "I am not sure/don't know") %>%
filter(vote_2020 != "I would not vote") %>%
filter(vote_2020 != "Someone else") %>%
na.omit() %>%
mutate(race_ethnicity =
case_when(
race_ethnicity == "White" ~ "white",
race_ethnicity == "Black, or African American" ~ "black/african american/negro",
race_ethnicity == "Asian (Vietnamese)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Chinese)" ~ "chinese",
race_ethnicity == "Asian (Korean)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Japanese)" ~ "japanese",
race_ethnicity == "Asian (Filipino)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Other)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Asian Indian)" ~ "american indian or alaska native",
race_ethnicity == "Pacific Islander (Other)" ~ "other asian or pacific islander",
race_ethnicity == "Pacific Islander (Samoan)" ~ "other asian or pacific islander",
race_ethnicity == "Pacific Islander (Guamanian)" ~ "other asian or pacific islander",
race_ethnicity == "Some other race" ~ "other race, nec",
race_ethnicity == "Pacific Islander (Native Hawaiian)" ~ "other asian or pacific islander",
race_ethnicity == "American Indian or Alaska Native" ~ "american indian or alaska native"
)
) %>%
mutate(household_income =
case_when(
(household_income == "Less than $14,999" | household_income == "$15,000 to $19,999" |
household_income == "$20,000 to $24,999" | household_income == '<NA>') ~ "less than $24,999",
(household_income == "$25,000 to $29,999" | household_income == "$30,000 to $34,999" |
household_income == "$35,000 to $39,999"| household_income == "$40,000 to $44,999" |
household_income == "$45,000 to $49,999") ~ "25,000 to 49,999",
(household_income == "$50,000 to $54,999" | household_income == "$55,000 to $59,999" |
household_income == "$60,000 to $64,999"| household_income == "$65,000 to $69,999" |
household_income == "$70,000 to $74,999" | household_income == "$75,000 to $79,999" |
household_income == "$80,000 to $84,999" | household_income == "$85,000 to $89,999" |
household_income == "$90,000 to $94,999" | household_income == "$95,000 to $99,999") ~ "50,000 to 99,999",
(household_income == "$100,000 to $124,999" | household_income == "$125,000 to $149,999") ~ "100,000 to 149,999",
(household_income == "$175,000 to $199,999" | household_income == "$150,000 to $174,999" |
household_income == "$200,000 to $249,999"| household_income == "$250,000 and above") ~ "150,000 or more"
)
) %>%
mutate(education =
case_when(
(education == "High school graduate" | education == "Other post high school vocational training" |
education == "3rd Grade or less" | education == "Completed some high school" | education == "Middle School - Grades 4 - 8") ~ "highschool or less",
(education == "Associate Degree" | education == "Completed some college, but no degree") ~ "associate degree",
(education == "College Degree (such as B.A., B.S.)" | education == "Completed some graduate, but no degree") ~ "bachelors degree",
(education == "Masters degree" | education == "Doctorate degree") ~ "masters or above"
)
) %>%
mutate(vote_trump =
ifelse(vote_2020=="Donald Trump", 1, 0)) %>%
mutate(gender = ifelse(gender=="Male","male","female"))
#### What else???? ####
# Maybe make some age-groups?
# Maybe check the values?
# Is vote a binary? If not, what are you going to do?
# Saving the survey/sample data as a csv file in my
# working directory
write_csv(reduced_data, "outputs/survey_data.csv")
#### Preamble ####
# Purpose: Prepare and clean the survey data downloaded from [...UPDATE ME!!!!!]
# Author: Rohan Alexander and Sam Caetano [CHANGE THIS TO YOUR NAME!!!!]
# Data: 22 October 2020
# Contact: rohan.alexander@utoronto.ca [PROBABLY CHANGE THIS ALSO!!!!]
# License: MIT
# Pre-requisites:
# - Need to have downloaded the data from X and save the folder that you're
# interested in to inputs/data
# - Don't forget to gitignore it!
#### Workspace setup ####
library(haven)
library(tidyverse)
setwd("/Users/Victor/Documents/sta304_ps3")
# Read in the raw data (You might need to change this if you use a different dataset)
raw_data <- read_dta("ns20200625/ns20200625.dta")
# Add the labels
raw_data <- labelled::to_factor(raw_data)
raw_data
unique(raw_data$household_income)
# Just keep some variables
reduced_data <-
raw_data %>%
select(
vote_2020,
gender,
race_ethnicity,
household_income,
education,
age) %>%
filter(vote_2020 != "I am not sure/don't know") %>%
filter(vote_2020 != "I would not vote") %>%
filter(vote_2020 != "Someone else") %>%
na.omit() %>%
mutate(race_ethnicity =
case_when(
race_ethnicity == "White" ~ "white",
race_ethnicity == "Black, or African American" ~ "black/african american/negro",
race_ethnicity == "Asian (Vietnamese)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Chinese)" ~ "chinese",
race_ethnicity == "Asian (Korean)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Japanese)" ~ "japanese",
race_ethnicity == "Asian (Filipino)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Other)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Asian Indian)" ~ "american indian or alaska native",
race_ethnicity == "Pacific Islander (Other)" ~ "other asian or pacific islander",
race_ethnicity == "Pacific Islander (Samoan)" ~ "other asian or pacific islander",
race_ethnicity == "Pacific Islander (Guamanian)" ~ "other asian or pacific islander",
race_ethnicity == "Some other race" ~ "other race, nec",
race_ethnicity == "Pacific Islander (Native Hawaiian)" ~ "other asian or pacific islander",
race_ethnicity == "American Indian or Alaska Native" ~ "american indian or alaska native"
)
) %>%
mutate(household_income =
case_when(
(household_income == "Less than $14,999" | household_income == "$15,000 to $19,999" |
household_income == "$20,000 to $24,999" | household_income == '<NA>') ~ "less than $25,000",
(household_income == "$25,000 to $29,999" | household_income == "$30,000 to $34,999" |
household_income == "$35,000 to $39,999"| household_income == "$40,000 to $44,999" |
household_income == "$45,000 to $49,999") ~ "25,000 to 49,999",
(household_income == "$50,000 to $54,999" | household_income == "$55,000 to $59,999" |
household_income == "$60,000 to $64,999"| household_income == "$65,000 to $69,999" |
household_income == "$70,000 to $74,999" | household_income == "$75,000 to $79,999" |
household_income == "$80,000 to $84,999" | household_income == "$85,000 to $89,999" |
household_income == "$90,000 to $94,999" | household_income == "$95,000 to $99,999") ~ "50,000 to 99,999",
(household_income == "$100,000 to $124,999" | household_income == "$125,000 to $149,999") ~ "100,000 to 149,999",
(household_income == "$175,000 to $199,999" | household_income == "$150,000 to $174,999" |
household_income == "$200,000 to $249,999"| household_income == "$250,000 and above") ~ "150,000 or more"
)
) %>%
mutate(education =
case_when(
(education == "High school graduate" | education == "Other post high school vocational training" |
education == "3rd Grade or less" | education == "Completed some high school" | education == "Middle School - Grades 4 - 8") ~ "highschool or less",
(education == "Associate Degree" | education == "Completed some college, but no degree") ~ "associate degree",
(education == "College Degree (such as B.A., B.S.)" | education == "Completed some graduate, but no degree") ~ "bachelors degree",
(education == "Masters degree" | education == "Doctorate degree") ~ "masters or above"
)
) %>%
mutate(vote_trump =
ifelse(vote_2020=="Donald Trump", 1, 0)) %>%
mutate(gender = ifelse(gender=="Male","male","female"))
#### What else???? ####
# Maybe make some age-groups?
# Maybe check the values?
# Is vote a binary? If not, what are you going to do?
# Saving the survey/sample data as a csv file in my
# working directory
write_csv(reduced_data, "outputs/survey_data.csv")
#### Preamble ####
# Purpose: Prepare and clean the survey data downloaded from [...UPDATE ME!!!!!]
# Author: Rohan Alexander and Sam Caetano [CHANGE THIS TO YOUR NAME!!!!]
# Data: 22 October 2020
# Contact: rohan.alexander@utoronto.ca [PROBABLY CHANGE THIS ALSO!!!!]
# License: MIT
# Pre-requisites:
# - Need to have downloaded the data from X and save the folder that you're
# interested in to inputs/data
# - Don't forget to gitignore it!
#### Workspace setup ####
library(haven)
library(tidyverse)
setwd("/Users/Victor/Documents/sta304_ps3")
# Read in the raw data (You might need to change this if you use a different dataset)
raw_data <- read_dta("ns20200625/ns20200625.dta")
# Add the labels
raw_data <- labelled::to_factor(raw_data)
raw_data
unique(raw_data$household_income)
# Just keep some variables
reduced_data <-
raw_data %>%
select(
vote_2020,
gender,
race_ethnicity,
household_income,
education,
age) %>%
filter(vote_2020 != "I am not sure/don't know") %>%
filter(vote_2020 != "I would not vote") %>%
filter(vote_2020 != "Someone else") %>%
na.omit() %>%
mutate(race_ethnicity =
case_when(
race_ethnicity == "White" ~ "white",
race_ethnicity == "Black, or African American" ~ "black/african american/negro",
race_ethnicity == "Asian (Vietnamese)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Chinese)" ~ "chinese",
race_ethnicity == "Asian (Korean)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Japanese)" ~ "japanese",
race_ethnicity == "Asian (Filipino)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Other)" ~ "other asian or pacific islander",
race_ethnicity == "Asian (Asian Indian)" ~ "american indian or alaska native",
race_ethnicity == "Pacific Islander (Other)" ~ "other asian or pacific islander",
race_ethnicity == "Pacific Islander (Samoan)" ~ "other asian or pacific islander",
race_ethnicity == "Pacific Islander (Guamanian)" ~ "other asian or pacific islander",
race_ethnicity == "Some other race" ~ "other race, nec",
race_ethnicity == "Pacific Islander (Native Hawaiian)" ~ "other asian or pacific islander",
race_ethnicity == "American Indian or Alaska Native" ~ "american indian or alaska native"
)
) %>%
mutate(household_income =
case_when(
(household_income == "Less than $14,999" | household_income == "$15,000 to $19,999" |
household_income == "$20,000 to $24,999" | household_income == '<NA>') ~ "less than 25,000",
(household_income == "$25,000 to $29,999" | household_income == "$30,000 to $34,999" |
household_income == "$35,000 to $39,999"| household_income == "$40,000 to $44,999" |
household_income == "$45,000 to $49,999") ~ "25,000 to 49,999",
(household_income == "$50,000 to $54,999" | household_income == "$55,000 to $59,999" |
household_income == "$60,000 to $64,999"| household_income == "$65,000 to $69,999" |
household_income == "$70,000 to $74,999" | household_income == "$75,000 to $79,999" |
household_income == "$80,000 to $84,999" | household_income == "$85,000 to $89,999" |
household_income == "$90,000 to $94,999" | household_income == "$95,000 to $99,999") ~ "50,000 to 99,999",
(household_income == "$100,000 to $124,999" | household_income == "$125,000 to $149,999") ~ "100,000 to 149,999",
(household_income == "$175,000 to $199,999" | household_income == "$150,000 to $174,999" |
household_income == "$200,000 to $249,999"| household_income == "$250,000 and above") ~ "150,000 or more"
)
) %>%
mutate(education =
case_when(
(education == "High school graduate" | education == "Other post high school vocational training" |
education == "3rd Grade or less" | education == "Completed some high school" | education == "Middle School - Grades 4 - 8") ~ "highschool or less",
(education == "Associate Degree" | education == "Completed some college, but no degree") ~ "associate degree",
(education == "College Degree (such as B.A., B.S.)" | education == "Completed some graduate, but no degree") ~ "bachelors degree",
(education == "Masters degree" | education == "Doctorate degree") ~ "masters or above"
)
) %>%
mutate(vote_trump =
ifelse(vote_2020=="Donald Trump", 1, 0)) %>%
mutate(gender = ifelse(gender=="Male","male","female"))
#### What else???? ####
# Maybe make some age-groups?
# Maybe check the values?
# Is vote a binary? If not, what are you going to do?
# Saving the survey/sample data as a csv file in my
# working directory
write_csv(reduced_data, "outputs/survey_data.csv")
library(tidyverse)
raw_data <- read_dta("ns20200625/ns20200625.dta")
logreg <- glm(data=survey_data, vote_trump~as.factor(gender)+as.factor(race_ethnicity)+as.factor(household_income)+as.factor(education)+age, family = "binomial")
library(tidyverse)
raw_data <- read_data("ns20200625/ns20200625.dta")
library(tidyverse)
raw_data <- read_data("ns20200625/ns20200625.dta")
raw_data <- read_data("ns20200625/ns20200625.dta")
library(tidyverse)
raw_data <- read_data("ns20200625/ns20200625.dta")
raw_data <- read_dta("ns20200625/ns20200625.dta")
raw_data <- read_dta("ns20200625/ns20200625.dta")
---
title: "Analysing the Key Factors in predicting the 2020 Election"
author: "Victor ChanYoung Cho, Usman Sadiq"
date: "Nov 2nd, 2020"
output:
pdf_document: default
html_document:
df_print: paged
---
# Abstract
TODO The overall summmary of the report; Mainly include background, what we did for the analyses, results and discussion.
# Introduction
An overarching issue that rises an immense political controvery is the United States presidential election. In 2016, Donald Trump impressed the political scene by being elected as the Republican nominee for president. He also continuously won the white house votes, which eventually lead to a surprise of being elected as the president, while many observers of the political scene predicted the election of Hillary Clinton. (Jérôme et. al, 2020) Now, with the election being an ongoing event, Trump has already checked on the different parties in the previous years. (Kim & Kim, 2020) With the ongoing presidential debate as well, Trump has also been having his firm stance against Biden, for his another successful election. The US presidential election as we observe is mainly a competition of the current and former president versus the most popular candiate. We will be modelling a multilevel logistic regression with the UCLA nationscape dataset and preform a poststratification process with the American Community Surveys (ACS) to predict the election outcome and to target the most successful candidate for the 2020 US election.
# Data
We will be using the Democracy Fund + UCLA Nationscape ‘Full Data Set’ for modelling and the ACS 2018 5 year data for post-stratification in order to perform our analysis. From the ACS data, we selected the key factors which we believed would have the strongest effect on the prediction of the outcome. The variables are the region, state, sex, age, race, hispanic origin, birthplace, years in the united states, education, labor force status and total income.
```{r setup, include=FALSE}
library(tidyverse)
raw_data <- read_dta("ns20200625/ns20200625.dta")
# Add the labels
raw_data <- labelled::to_factor(raw_data)
# Loading in the cleaned survey Data
survey_data <- read_csv("./outputs/survey_data.csv")
# Loading in the cleaned census Data
census_data <- read_csv("./outputs/census_data.csv")
```
# Model
Our goal for the study as mentioned above is to predict the outcome of the US election, particularly in the interest of Donald Trump's re-election. Using the Democracy Fund + UCLA Nationscape ‘Full Data Set’ from the Voters Study Group(@citeSurveyData), We will implement a binary logistic model that concerns whether citizens will vote from Trump or Bide, then analyse the proportions of Trump voters and Biden voters.
To supplement the above, we will also be applying the multilevel regression post-stratification technique on the overall census data(@citeCensusData) obtained through IPUMS to yield the expected the overall outcome of the US election. The detailed procedure and outcome will be described below in the post-stratification section and the results.
## Model Specifics
We have implemented the linear regression model to model the proportion of the voters who will vote for Donald Trump. We decided to use the logistic regression model as we saw the election process as a binomial process. That is, whether people vote for Trump or Biden could be seen as one Bernoulli random variable, and multiple trials of these result in a binomial process. As mentioned in the data section, the variables we have taken into account to model the probability of voting for Donald Trump is region, state, sex, age, race, hispanic origin, birthplace, years in the united states, education, labor force status and total income. We present our logistic regression model by the following:
$$ log(p/1-p) = \beta_0+\beta_1  x_{employment} + \beta_2 x_{gender} + \beta_3 x_{race_ethnicity} + \beta_4 x_{household_income} + \beta_5 x_{education} + \beta_6 x_{age} + \beta_7 x_{hispanic} $$
Where $p$ represents the proportion of voters who will vote for Donald Trump. Similarly, $\beta_0$ represents the intercept of the model, and is the probability of voting for Donald Trump at age 0. $\beta_1$ represents the log odds that change for each unit increase in employment, $\beta_2$ represents the log odds based on gender, $\beta_3$  based on ethnicity, $\beta_4$ based on household income, $\beta_5$  based on education, $\beta_6$ based on age, and $\beta_7$, based on hispanic.
```{r, include=FALSE}
#
logreg <- glm(data=survey_data, vote_trump~as.factor(gender)+as.factor(race_ethnicity)+as.factor(household_income)+as.factor(education)+age, family = "binomial")
broom::tidy(logreg)
```
## Post-Stratification
In order to estimate the proportion of voters who will vote for Donald Trump I need to perform a post-stratification analysis. Here I create cells based off different ages. Using the model described in the previous sub-section I will estimate the proportion of voters in each age bin. I will then weight each proportion estimate (within each bin) by the respective population size of that bin and sum those values and divide that by the entire population size.
```{r, include=FALSE}
census_data
# Here I will perform the post-stratification calculation
census_data$logodds_estimate <-
logreg %>%
predict(newdata = census_data)
census_data$estimate <-
exp(census_data$logodds_estimate)/(1+exp(census_data$logodds_estimate))
census_data %>%
mutate(alp_predict_prop = estimate*n) %>%
summarise(alp_predict = sum(alp_predict_prop)/sum(n))
```
# Results
Here you will include all results. This includes descriptive statistics, graphs, figures, tables, and model results. Please ensure that everything is well formatted and in a report style. You must also provide an explanation of the results in this section.
```{r}
broom::tidy(logreg)
```
Please ensure that everything is well labelled. So if you have multiple histograms and plots, calling them Figure 1, 2, 3, etc. and referencing them as Figure 1, Figure 2, etc. in your report will be expected. The reader should not get lost in a sea of information. Make sure to have the results be clean, well formatted and digestible.
# Discussion
Here you will summarize the previous sections and discuss conclusions drawn from the results. Make sure to elaborate and connect your analysis to the goal of the study.
## Weaknesses
Here we discuss weaknesses of the study, data, analysis, etc. You can also discuss areas for improvement.
## Next Steps
Here you discuss subsequent work to be done after this report. This can include next steps in terms of statistical analysis (perhaps there is a more efficient algorithm available, or perhaps there is a caveat in the data that would allow for some new technique). Future steps should also be specified in terms of the study setting (eg. including a follow-up survey on something, or a subsequent study that would complement the conclusions of your report).
# References
Tausanovitch, Chris and Lynn Vavreck. 2020. Democracy Fund + UCLA Nationscape, October 10-17, 2019 (version
20200814). Retrieved from [https://www.voterstudygroup.org/downloads?key=9e0589c5-5ecc-4575-be2a-8285262f97fe.
Steven Ruggles, Sarah Flood, Ronald Goeken, Josiah Grover, Erin Meyer, Jose Pacas and Matthew Sobek. IPUMS USA: Version
10.0 [dataset]. Minneapolis, MN: IPUMS, 2020. https://doi.org/10.18128/D010.V10.0
Jérôme, B., Jérôme, V., Mongrain, P., & Nadeau, R. (2020). State-Level Forecasts for the 2020 US Presidential
Election: Tough Victory Ahead for Biden. PS: Political Science & Politics, 1-4. doi:10.1017/S1049096520001377
Kim, A., &amp; Kim, P. (2019). Estimation of the 2020 US Presidential Election Competition and Election
Stratagies. 2019 IEEE 10th Annual Ubiquitous Computing, Electronics &amp; Mobile Communication Conference
(UEMCON). doi:10.1109/uemcon47517.2019.8992973
raw_data <- labelled::to_factor(raw_data)
raw_data
unique(raw_data)
library(tidyverse)
# Loading in the cleaned survey Data
survey_data <- read_csv("./outputs/survey_data.csv")
# Loading in the cleaned census Data
census_data <- read_csv("./outputs/census_data.csv")
logreg <- glm(data=survey_data, vote_trump~as.factor(gender)+as.factor(race_ethnicity)+as.factor(household_income)+as.factor(education)+age, family = "binomial")
census_data
# Here I will perform the post-stratification calculation
census_data$logodds_estimate <-
logreg %>%
predict(newdata = census_data)
census_data$estimate <-
exp(census_data$logodds_estimate)/(1+exp(census_data$logodds_estimate))
census_data %>%
mutate(alp_predict_prop = estimate*n) %>%
summarise(alp_predict = sum(alp_predict_prop)/sum(n))
broom::tidy(logreg)
broom::tidy(logreg)
library(tidyverse)
# Loading in the cleaned survey Data
survey_data <- read_csv("./outputs/survey_data.csv")
# Loading in the cleaned census Data
census_data <- read_csv("./outputs/census_data.csv")
census_data
# Here I will perform the post-stratification calculation
census_data$logodds_estimate <-
logreg %>%
predict(newdata = census_data)
census_data$estimate <-
exp(census_data$logodds_estimate)/(1+exp(census_data$logodds_estimate))
census_data %>%
mutate(alp_predict_prop = estimate*n) %>%
summarise(alp_predict = sum(alp_predict_prop)/sum(n))
